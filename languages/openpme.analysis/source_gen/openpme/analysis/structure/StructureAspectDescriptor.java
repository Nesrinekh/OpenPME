package openpme.analysis.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptHerbieAnnotation = createDescriptorForHerbieAnnotation();
  private final LanguageConceptSwitch myConceptIndex;

  public StructureAspectDescriptor() {
    myConceptIndex = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptHerbieAnnotation);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myConceptIndex.index(id)) {
      case LanguageConceptSwitch.HerbieAnnotation:
        return myConceptHerbieAnnotation;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myConceptIndex.index(c);
  }

  private static ConceptDescriptor createDescriptorForHerbieAnnotation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("openpme.analysis", "HerbieAnnotation", 0xd5e2442b039e493bL, 0xb466e933a1705c19L, 0x5d477533687339ebL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.NodeAttribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L);
    b.origin("r:4c57e75d-fecf-4ba1-9c7d-6fa99b103c50(openpme.analysis.structure)/6721469832529918443");
    b.aggregate("inputError", 0x5d47753368735b30L).target(0x9a51a2b483e44324L, 0x8cf84ee101121a3aL, 0x5d47753368735b7fL).optional(true).ordered(true).multiple(false).origin("6721469832529926960").done();
    b.aggregate("outputError", 0x5d47753368735f0bL).target(0x9a51a2b483e44324L, 0x8cf84ee101121a3aL, 0x5d47753368735b7fL).optional(true).ordered(true).multiple(false).origin("6721469832529927947").done();
    b.aggregate("replacement", 0x5d47753368735f10L).target(0xd89a1f942b1040d1L, 0xa01e560f94e501d7L, 0x5d47753368735f49L).optional(true).ordered(true).multiple(false).origin("6721469832529927952").done();
    return b.create();
  }
}
