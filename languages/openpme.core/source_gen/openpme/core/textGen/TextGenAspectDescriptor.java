package openpme.core.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenAspectBase;
import openpme.core.structure.LanguageConceptSwitch;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.text.rt.TextGenDescriptor;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class TextGenAspectDescriptor extends TextGenAspectBase {
  private final LanguageConceptSwitch myIndex = new LanguageConceptSwitch();

  public TextGenAspectDescriptor() {
  }

  @Nullable
  @Override
  public TextGenDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    switch (myIndex.index(concept)) {
      case LanguageConceptSwitch.BoundryConditions:
        return new BoundryConditions_TextGen();
      case LanguageConceptSwitch.Box:
        return new Box_TextGen();
      case LanguageConceptSwitch.Continuous:
        return new Continuous_TextGen();
      case LanguageConceptSwitch.CutoffRadius:
        return new CutoffRadius_TextGen();
      case LanguageConceptSwitch.Dimension:
        return new Dimension_TextGen();
      case LanguageConceptSwitch.Discrete:
        return new Discrete_TextGen();
      case LanguageConceptSwitch.Domain:
        return new Domain_TextGen();
      case LanguageConceptSwitch.Epsilon:
        return new Epsilon_TextGen();
      case LanguageConceptSwitch.Force:
        return new Force_TextGen();
      case LanguageConceptSwitch.Ghost:
        return new Ghost_TextGen();
      case LanguageConceptSwitch.InitialConditions:
        return new InitialConditions_TextGen();
      case LanguageConceptSwitch.ListOfContinuousComm:
        return new ListOfContinuousComm_TextGen();
      case LanguageConceptSwitch.ListOfDiscreteComm:
        return new ListOfDiscreteComm_TextGen();
      case LanguageConceptSwitch.NonPeriodic:
        return new NonPeriodic_TextGen();
      case LanguageConceptSwitch.NonUniform:
        return new NonUniform_TextGen();
      case LanguageConceptSwitch.Nu:
        return new Nu_TextGen();
      case LanguageConceptSwitch.Omega:
        return new Omega_TextGen();
      case LanguageConceptSwitch.Periodic:
        return new Periodic_TextGen();
      case LanguageConceptSwitch.Phi:
        return new Phi_TextGen();
      case LanguageConceptSwitch.PhysicalQuantity:
        return new PhysicalQuantity_TextGen();
      case LanguageConceptSwitch.Psi:
        return new Psi_TextGen();
      case LanguageConceptSwitch.Sigma:
        return new Sigma_TextGen();
      case LanguageConceptSwitch.Tau:
        return new Tau_TextGen();
      case LanguageConceptSwitch.TypeOfBoundry:
        return new TypeOfBoundry_TextGen();
      case LanguageConceptSwitch.TypeOfInitialCond:
        return new TypeOfInitialCond_TextGen();
      case LanguageConceptSwitch.TypeOfSimulation:
        return new TypeOfSimulation_TextGen();
      case LanguageConceptSwitch.Uniform:
        return new Uniform_TextGen();
    }
    return null;
  }

}
